name: Main

on:
  push:
  schedule:
    - cron: '*/15 * * * *'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs: 
      run_build_jobs: ${{ steps.results.outputs.run_build }}
      release_tag: ${{ steps.version.outputs.release_tag }}
      current_tag: ${{ steps.version.outputs.current_tag }}
    steps:
      - name: Get Latest Forge CLI Release
        id: version
        run: |
          echo ::set-output name=release_tag::$(curl -sL https://api.github.com/repos/laravel/forge-cli/releases/latest | jq -r ".tag_name")
          echo ::set-output name=current_tag::$(curl -sL https://api.github.com/repos/vtalbot/forge-cli-ci/releases/latest | jq -r ".tag_name")
      - name: Validate Versions
        id: results
        run: |
          if [[ "${{ steps.version.outputs.release_tag }}" == "${{ steps.version.outputs.current_tag }}" ]]; then
            echo ::set-output name=run_build::false
          else
            echo ::set-output name=run_build::true
          fi
  build:
    runs-on: ubuntu-latest
    needs: [check-version]
    if: needs.check-version.outputs.run_build_jobs == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Forge CLI Docker
        if: needs.check-version.outputs.current_tag != needs.check-version.outputs.release_tag
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            version=${{ needs.check-version.outputs.release_tag }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/forge-cli:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/forge-cli:${{ needs.check-version.outputs.release_tag }}
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check-version.outputs.release_tag }}
          release_name: ${{ needs.check-version.outputs.release_tag }}
          draft: false
          prerelease: false
